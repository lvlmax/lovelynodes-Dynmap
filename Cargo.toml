[package]
name = "mc-nodes-editor"
version = "0.0.0"
authors = ["phonon <phonon9000@gmail.com>"]

[lib]
name = "wasm_main"
path = "src/lib.rs"
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
cfg-if = "1.0.0"
wasm-bindgen = "0.2.95" # must match CLI version
approx = "0.5.1"
bitflags = "1.3.2"
thiserror = "1.0.38"
num-traits = "0.2.15"
js-sys = "0.3.60"
web-sys = { version = "0.3", features = [ "console" ] }
fnv = "1.0.7"
rand = { version = "0.8.5", features = [ "small_rng" ] }
getrandom = { version = "0.2.8", features = ["js"] } # needed for `rand` crate wasm32 support
voronator = { version = "0.1.2" }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
# wee_alloc = { version = "0.4.2", optional = true }

[dev-dependencies]
wasm-bindgen-test = "0.3.33"

[profile.dev]
opt-level = 0

[profile.release]
opt-level = 3
debug = false
rpath = false
lto = false
debug-assertions = false
incremental = false
overflow-checks = false
strip = true
